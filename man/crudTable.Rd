% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crudTable.R
\name{crudTable}
\alias{crudTable}
\title{Server-part of the CRUD table view module}
\usage{
crudTable(input, output, session, dao, formUI, formServer)
}
\arguments{
\item{input}{Shiny server-part input object}

\item{output}{Shiny server-part output object}

\item{session}{Shiny server-part session object}

\item{dao}{Data Access Object that provides the data handling operations, see e.g. \code{\link{sqlDao}}.}

\item{formUI}{A function that creates the data editing modal dialog typically by calling the
\code{\link{editDialog}} function. See examples below.}

\item{formServer}{A function that handles the actions performed in the 'formUI' edit dialog. Typically, it is
a function created with the \code{\link{editDialogServer}} factory. See examples below.}
}
\value{
Returns a reactive object that triggers on any data change within the CRUD table.
}
\description{
This is the server part of the module. It handles all the CRUD operations on data. For new record or existing
record editing, a modal dialog defined in 'formUI' and 'formServer' is opened. The data are accessed via
the 'dao' structure.
}
\examples{
\dontrun{
library(shiny)
library(crudtable)

# Create Data Access Object
dao <- dataFrameDao(CO2)

# Create edit form dialog
formUI <- function(id) {
    ns <- NS(id)
    editDialog(id,
               textInput(ns('Plant'), 'Plant'),
               selectInput(ns('Type'), 'Type', choices = c('Quebec', 'Mississippi')),
               selectInput(ns('Treatment'), 'Treatment', choices = c('nonchilled', 'chilled')),
               numericInput(ns('conc'), 'Ambient CO2 concentration [ml/L]',
                            value = 100, min = 50, max = 1000),
               numericInput(ns('uptake'), 'CO2 uptake rates [umol/m2 sec]',
                            value = 0, min = 0, max = 100),
    )
}

# Create edit form dialog handler
formServer <- editDialogServer(dao$getAttributes())

# User Interface
ui <- fluidPage(
    titlePanel('crudtable example'),
    hr(),
    crudTableUI('crud')
)

# Server-side
server <- function(input, output, session) {
    callModule(crudTable, 'crud', dao, formUI, formServer)
}

# Run the shiny app
shinyApp(ui = ui, server = server)
}
}
