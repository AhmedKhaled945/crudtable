% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crudTableUI.R
\name{crudTableUI}
\alias{crudTableUI}
\title{Creates a data table view capable of CRUD operations.}
\usage{
crudTableUI(
  id,
  newButtonLabel = "New Record",
  newButtonIcon = icon("plus"),
  newButtonClass = "btn-primary",
  newButtonWidth = NULL
)
}
\arguments{
\item{id}{The ID of the widget}

\item{newButtonLabel}{Label of the button for adding of new records. If 'NULL', the button is not
shown.}

\item{newButtonIcon}{Icon of the button for adding of new records}

\item{newButtonClass}{Class of the button for adding of new records}

\item{newButtonWidth}{The width of the button, e.g. '400px' or '100\%'}
}
\value{
An editable data table widget
}
\description{
This shiny module allows to view data in a datatable and also add new data, modify existent
records or delete the records. This UI widget consists of a \code{\link[DT]{datatable}} view,
which contains buttons for editing and deleting of table rows, and an action button for the
creation of new records.
}
\details{
This function is the UI part of the module. For server part see \code{\link{crudTable}}.
}
\examples{
\dontrun{
library(shiny)
library(crudtable)

# Create Data Access Object
dao <- dataFrameDao(CO2)

# Create edit form dialog
myFormUI <- function(id) {
    ns <- NS(id)
    formUI(id,
           selectInput(ns('Type'), 'Type', choices = c('Quebec', 'Mississippi')),
           selectInput(ns('Type'), 'Type', choices = c('Quebec', 'Mississippi')),
           selectInput(ns('Treatment'), 'Treatment', choices = c('nonchilled', 'chilled')),
           numericInput(ns('conc'), 'Ambient CO2 concentration [ml/L]',
                        value = 100, min = 50, max = 1000),
           numericInput(ns('uptake'), 'CO2 uptake rates [umol/m2 sec]',
                        value = 0, min = 0, max = 100),
    )
}

# Create edit form dialog handler
myFormServer <- formServerFactory(dao$getAttributes())

# User Interface
ui <- fluidPage(
    crudTableUI('crud')
)

# Server-side
server <- function(input, output, session) {
    callModule(crudTable, 'crud', dao, myFormUI, myFormServer)
}

# Run the shiny app
shinyApp(ui = ui, server = server)
}
}
\seealso{
\code{\link{crudTable}}
}
